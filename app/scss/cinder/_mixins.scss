@mixin translate-prop($prop, $speed) {
	-webkit-transition: $prop $speed + ms linear;
	-moz-transition: $prop $speed + ms linear;
	-ms-transition: $prop $speed + ms linear;
	-o-transition: $prop $speed + ms linear;
	transition: $prop $speed + ms linear;
}

@mixin move3d($x, $y, $time) {
	-webkit-transform: translate($x, $y);
	-moz-transform: translate($x, $y);
	-o-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	transform: translate($x, $y);
	transition: transform $time, opacity $time;
}

@mixin move($x, $y, $time) {
	transform: translateX($x) translateY($y) translateZ(-1000px);
	transition: transform $time, opacity $time;
}

@mixin anim($prop, $time, $animation) {
	transition: $prop $time $animation;
}

@mixin lineheight($h) {	
	height: $h + px;
	line-height: $h + px;
}
@mixin reset {
	margin: 0;
	padding: 0;
}

@mixin list-reset {
	@include reset;
	list-style: none;
}

@function em($pixels, $context: $cinder-px-context) {
  @return #{$pixels/$context}em
}

@mixin maxMQ($maxW) {
	@media (max-width: $maxW) {
		@content;
	}
}

@mixin minMQ($minW) {
	@media (min-width: $minW) {
		@content;
	}
}

@mixin minMaxMQ($minW, $maxW) {
	@media (min-width: $minW) and (max-width: $maxW) {
		@content;
	}
}
